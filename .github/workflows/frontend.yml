name: React Native CI with Backend

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  integration-test:
    name: Frontend Tests with Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out frontend repository
        uses: actions/checkout@v4
      
      - name: Check out backend repository
        uses: actions/checkout@v4
        with:
          repository: VolkerFelix/backendareum
          path: backend
          token: ${{ secrets.GH_PAT }}
      
      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2
      
      - name: Start backend services
        working-directory: ./backend
        env:
          POSTGRES__DATABASE__USER: ${{ secrets.POSTGRES__DATABASE__USER }}
          POSTGRES__DATABASE__PASSWORD: ${{ secrets.POSTGRES__DATABASE__PASSWORD }}
          APP__APPLICATION__USER: ${{ secrets.APP__APPLICATION__USER }}
          APP__APPLICATION__PASSWORD: ${{ secrets.APP__APPLICATION__PASSWORD }}
        run: |
          # Create .env file for docker-compose
          cat > .env << EOF
          POSTGRES__DATABASE__USER=${{ secrets.POSTGRES__DATABASE__USER }}
          POSTGRES__DATABASE__PASSWORD=${{ secrets.POSTGRES__DATABASE__PASSWORD }}
          APP__APPLICATION__USER=${{ secrets.APP__APPLICATION__USER }}
          APP__APPLICATION__PASSWORD=${{ secrets.APP__APPLICATION__PASSWORD }}
          EOF
          
          # Start services
          docker-compose up -d
          
          # Wait for backend to become available
          echo "Waiting for backend to start..."
          timeout 120 bash -c 'until curl -s http://localhost:8080/backend_health; do sleep 5; echo "Still waiting..."; done' || echo "Backend startup timed out"
          
          # Print logs if there are issues
          if ! curl -s http://localhost:8080/backend_health > /dev/null; then
            echo "Backend health check failed. Printing logs:"
            docker-compose logs
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
          
      - name: Run frontend tests
        run: npm test
        
      - name: Tear down backend services
        if: always()
        working-directory: ./backend
        run: docker-compose down
        
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          
      - name: Build web version
        run: npx expo export:web
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: web-build/
          retention-days: 7